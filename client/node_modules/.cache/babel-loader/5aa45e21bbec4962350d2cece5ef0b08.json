{"ast":null,"code":"import _defineProperty from \"/Users/gzoldi/github/plenty-interview/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/gzoldi/github/plenty-interview/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gzoldi/github/plenty-interview/client/src/App/Main/Form/Form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport { postSchedule } from './../../api.js';\nconst useStyles = makeStyles({\n  FormContainer: {\n    margin: '1.5rem'\n  },\n  InlineForm: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  SliderInput: {\n    flex: '9',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  SaveBtn: {\n    flex: '1',\n    margin: '0.5rem 0 0.5rem 1rem'\n  }\n});\n\nconst InputSlider = ({\n  selectedSchedulePoint,\n  newTargetRef\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  useEffect(() => {\n    newTargetRef.current = value;\n  });\n  useEffect(() => {\n    setValue(selectedSchedulePoint.target);\n  }, [selectedSchedulePoint]);\n\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = e => {\n    setValue(e.target.value === '' ? 0 : Number(e.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    value: value,\n    valueLabelDisplay: \"auto\",\n    min: 0,\n    max: 110,\n    step: 5,\n    marks: true,\n    onChange: handleSliderChange,\n    \"aria-labelledby\": \"input-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: value,\n    margin: \"dense\",\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    inputProps: {\n      step: 5,\n      min: 0,\n      max: 110,\n      type: 'number',\n      'aria-labelledby': 'input-slider'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n};\n\nconst Form = ({\n  selectedSchedulePoint,\n  setSchedulesMap,\n  selectedRoom,\n  schedulesMap\n}) => {\n  const classes = useStyles();\n  const newTargetRef = useRef(0);\n\n  const handleSubmit = async () => {\n    if (selectedSchedulePoint == null) return;\n    const currSchedule = schedulesMap[selectedRoom]['commands'];\n    const currTime = selectedSchedulePoint.time;\n    const newTargetVal = newTargetRef.current;\n    const newScheduleData = {\n      commands: [...currSchedule, {\n        time: currTime,\n        target: newTargetVal\n      }]\n    };\n\n    const _ref = await postSchedule(selectedRoom, newScheduleData),\n          status = _ref.status;\n\n    if (status === 200) {\n      const newSchedulesMap = _objectSpread({}, schedulesMap, {\n        [selectedRoom]: newScheduleData\n      });\n\n      setSchedulesMap(newSchedulesMap);\n    } else {\n      alert('Schedule Failed To Save');\n    }\n  };\n\n  const FormContent = () => {\n    const FORM_TITLE = 'Select New Temperature';\n    if (selectedSchedulePoint == null) return React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Click on a Data Point on the Graph to Modify\");\n    return React.createElement(\"form\", {\n      className: classes.InlineForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.SliderInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      id: \"input-slider\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, FORM_TITLE), React.createElement(InputSlider, Object.assign({\n      selectedSchedulePoint,\n      newTargetRef\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.SaveBtn,\n      size: \"small\",\n      onClick: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Save\"));\n  };\n\n  return React.createElement(Card, {\n    className: classes.FormContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, selectedSchedulePoint && React.createElement(CardHeader, {\n    title: \"Current Target: \".concat(selectedSchedulePoint.target),\n    subheader: \"at \".concat(selectedSchedulePoint.time),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(FormContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/gzoldi/github/plenty-interview/client/src/App/Main/Form/Form.jsx"],"names":["React","useState","useEffect","useRef","Grid","Card","CardContent","CardHeader","FormControl","Typography","Slider","Input","Button","makeStyles","postSchedule","useStyles","FormContainer","margin","InlineForm","display","justifyContent","SliderInput","flex","flexDirection","SaveBtn","InputSlider","selectedSchedulePoint","newTargetRef","value","setValue","current","target","handleSliderChange","e","newValue","handleInputChange","Number","handleBlur","step","min","max","type","Form","setSchedulesMap","selectedRoom","schedulesMap","classes","handleSubmit","currSchedule","currTime","time","newTargetVal","newScheduleData","commands","status","newSchedulesMap","alert","FormContent","FORM_TITLE"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport { postSchedule } from './../../api.js';\n\nconst useStyles = makeStyles({\n  FormContainer: {\n    margin: '1.5rem'\n  },\n  InlineForm: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  SliderInput: {\n    flex: '9',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  SaveBtn: {\n    flex: '1',\n    margin: '0.5rem 0 0.5rem 1rem'\n  }\n});\n\nconst InputSlider = ({ selectedSchedulePoint, newTargetRef }) => {\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    newTargetRef.current = value;\n  });\n\n  useEffect(() => {\n    setValue(selectedSchedulePoint.target);\n  }, [selectedSchedulePoint]);\n\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = e => {\n    setValue(e.target.value === '' ? 0 : Number(e.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item xs>\n        <Slider\n          value={value}\n          valueLabelDisplay=\"auto\"\n          min={0}\n          max={110}\n          step={5}\n          marks\n          onChange={handleSliderChange}\n          aria-labelledby=\"input-slider\"\n        />\n      </Grid>\n      <Grid item>\n        <Input\n          value={value}\n          margin=\"dense\"\n          onChange={handleInputChange}\n          onBlur={handleBlur}\n          inputProps={{\n            step: 5,\n            min: 0,\n            max: 110,\n            type: 'number',\n            'aria-labelledby': 'input-slider'\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Form = ({ selectedSchedulePoint, setSchedulesMap, selectedRoom, schedulesMap }) => {\n  const classes = useStyles();\n  const newTargetRef = useRef(0);\n\n  const handleSubmit = async () => {\n    if (selectedSchedulePoint == null) return;\n    const currSchedule = schedulesMap[selectedRoom]['commands'];\n    const currTime = selectedSchedulePoint.time;\n    const newTargetVal = newTargetRef.current;\n    const newScheduleData = { commands: [...currSchedule, { time: currTime, target: newTargetVal }] };\n\n    const { status } = await postSchedule(selectedRoom, newScheduleData);\n    if (status === 200) {\n      const newSchedulesMap = {\n        ...schedulesMap,\n        [selectedRoom]: newScheduleData\n      };\n      setSchedulesMap(newSchedulesMap);\n    } else {\n      alert('Schedule Failed To Save');\n    }\n  };\n\n  const FormContent = () => {\n    const FORM_TITLE = 'Select New Temperature';\n    if (selectedSchedulePoint == null) return <b>Click on a Data Point on the Graph to Modify</b>;\n    return (\n      <form className={classes.InlineForm}>\n        <FormControl className={classes.SliderInput}>\n          <Typography id=\"input-slider\" gutterBottom>\n            {FORM_TITLE}\n          </Typography>\n          <InputSlider {...{ selectedSchedulePoint, newTargetRef }} />\n        </FormControl>\n        <Button variant=\"contained\" color=\"primary\" className={classes.SaveBtn} size=\"small\" onClick={handleSubmit}>\n          Save\n        </Button>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.FormContainer}>\n      {selectedSchedulePoint && (\n        <CardHeader\n          title={`Current Target: ${selectedSchedulePoint.target}`}\n          subheader={`at ${selectedSchedulePoint.time}`}\n        />\n      )}\n      <CardContent>\n        <FormContent />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}