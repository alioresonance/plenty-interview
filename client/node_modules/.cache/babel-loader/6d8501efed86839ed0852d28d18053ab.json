{"ast":null,"code":"var _jsxFileName = \"/Users/gzoldi/Downloads/Plenty QA Takehome/client/src/App/Main/Graph/Graph.jsx\";\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/styles';\nimport { LineChart, XAxis, YAxis, Tooltip, Line, ReferenceDot, ResponsiveContainer } from 'recharts';\nconst useStyles = makeStyles({\n  GraphContainer: {\n    display: 'flex',\n    maxHeight: '60%',\n    width: '100%',\n    flex: 1\n  }\n});\n\nconst Graph = ({\n  selectedSchedulePoint,\n  setSelectedSchedulePoint,\n  graphSelectedSchedule\n}) => {\n  const classes = useStyles();\n\n  const handleClick = e => {\n    const target = e.payload;\n\n    if (target === selectedSchedulePoint) {\n      setSelectedSchedulePoint(null);\n    } else {\n      setSelectedSchedulePoint(target);\n    }\n  };\n\n  return React.createElement(Box, {\n    className: classes.GraphContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: graphSelectedSchedule,\n    margin: {\n      top: 10,\n      right: 10,\n      left: 10,\n      bottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    domain: ['dataMin - 15', 'dataMax + 15'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"stepAfter\",\n    dataKey: \"target\",\n    stroke: \"purple\",\n    strokeWidth: 3,\n    dot: {\n      r: 5\n    },\n    activeDot: {\n      onClick: handleClick,\n      r: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), selectedSchedulePoint && React.createElement(ReferenceDot, {\n    x: selectedSchedulePoint['time'],\n    y: selectedSchedulePoint['target'],\n    r: 8,\n    fill: \"red\",\n    stroke: \"none\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/gzoldi/Downloads/Plenty QA Takehome/client/src/App/Main/Graph/Graph.jsx"],"names":["React","Box","makeStyles","LineChart","XAxis","YAxis","Tooltip","Line","ReferenceDot","ResponsiveContainer","useStyles","GraphContainer","display","maxHeight","width","flex","Graph","selectedSchedulePoint","setSelectedSchedulePoint","graphSelectedSchedule","classes","handleClick","e","target","payload","top","right","left","bottom","r","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,IAA3C,EAAiDC,YAAjD,EAA+DC,mBAA/D,QAA0F,UAA1F;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,SAAS,EAAE,KAFG;AAGdC,IAAAA,KAAK,EAAE,MAHO;AAIdC,IAAAA,IAAI,EAAE;AAJQ;AADW,CAAD,CAA5B;;AASA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA,wBAAzB;AAAmDC,EAAAA;AAAnD,CAAD,KAAgF;AAC5F,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,QAAMW,WAAW,GAAGC,CAAC,IAAI;AACvB,UAAMC,MAAM,GAAGD,CAAC,CAACE,OAAjB;;AACA,QAAID,MAAM,KAAKN,qBAAf,EAAsC;AACpCC,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,KAFD,MAEO;AACLA,MAAAA,wBAAwB,CAACK,MAAD,CAAxB;AACD;AACF,GAPD;;AASA,SACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACT,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEQ,qBAAjB;AAAwC,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,CAAC,cAAD,EAAiB,cAAjB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,WAAW,EAAE,CAJf;AAKE,IAAA,GAAG,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KALP;AAME,IAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAET,WAAX;AAAwBQ,MAAAA,CAAC,EAAE;AAA3B,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYGZ,qBAAqB,IACpB,oBAAC,YAAD;AACE,IAAA,CAAC,EAAEA,qBAAqB,CAAC,MAAD,CAD1B;AAEE,IAAA,CAAC,EAAEA,qBAAqB,CAAC,QAAD,CAF1B;AAGE,IAAA,CAAC,EAAE,CAHL;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,MAAM,EAAC,MALT;AAME,IAAA,OAAO,EAAEI,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF,CADF,CADF;AA6BD,CAzCD;;AA2CA,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/styles';\nimport { LineChart, XAxis, YAxis, Tooltip, Line, ReferenceDot, ResponsiveContainer } from 'recharts';\n\nconst useStyles = makeStyles({\n  GraphContainer: {\n    display: 'flex',\n    maxHeight: '60%',\n    width: '100%',\n    flex: 1\n  }\n});\n\nconst Graph = ({ selectedSchedulePoint, setSelectedSchedulePoint, graphSelectedSchedule }) => {\n  const classes = useStyles();\n\n  const handleClick = e => {\n    const target = e.payload;\n    if (target === selectedSchedulePoint) {\n      setSelectedSchedulePoint(null);\n    } else {\n      setSelectedSchedulePoint(target);\n    }\n  };\n\n  return (\n    <Box className={classes.GraphContainer}>\n      <ResponsiveContainer>\n        <LineChart data={graphSelectedSchedule} margin={{ top: 10, right: 10, left: 10, bottom: 10 }}>\n          <XAxis dataKey=\"time\" />\n          <YAxis domain={['dataMin - 15', 'dataMax + 15']} />\n          <Tooltip />\n          <Line\n            type=\"stepAfter\"\n            dataKey=\"target\"\n            stroke=\"purple\"\n            strokeWidth={3}\n            dot={{ r: 5 }}\n            activeDot={{ onClick: handleClick, r: 5 }}\n          />\n          {selectedSchedulePoint && (\n            <ReferenceDot\n              x={selectedSchedulePoint['time']}\n              y={selectedSchedulePoint['target']}\n              r={8}\n              fill=\"red\"\n              stroke=\"none\"\n              onClick={handleClick}\n            />\n          )}\n        </LineChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}