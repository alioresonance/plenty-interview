{"ast":null,"code":"import _slicedToArray from \"/Users/gzoldi/Downloads/Plenty QA Takehome/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gzoldi/Downloads/Plenty QA Takehome/client/src/App/Main/Main.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Graph from './Graph/Graph';\nimport Form from './Form/Form';\nimport { makeStyles } from '@material-ui/styles';\nimport { getHourlySchedule } from './../utils';\nconst useStyles = makeStyles({\n  Main: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '2rem',\n    width: '100%'\n  },\n  ContentSection: {\n    flex: 'auto',\n    width: '100%',\n    display: 'flex'\n  },\n  GraphFormSection: {\n    marginTop: '4rem',\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    maxHeight: '80%',\n    padding: '0 2rem'\n  }\n});\n\nconst Main = ({\n  schedulesMap,\n  selectedRoom,\n  setSchedulesMap\n}) => {\n  const classes = useStyles();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedSchedulePoint = _useState2[0],\n        setSelectedSchedulePoint = _useState2[1];\n\n  useEffect(() => {\n    if (selectedSchedulePoint) {\n      const time = selectedSchedulePoint.time;\n      const mapPoint = schedulesMap[selectedRoom].commands.find(x => x.time === time);\n\n      if (mapPoint) {\n        setSelectedSchedulePoint(mapPoint);\n      } else {\n        setSelectedSchedulePoint(null);\n      }\n    } // eslint-disable-next-line\n\n  }, [schedulesMap, selectedRoom]);\n  const selectedSchedule = schedulesMap[selectedRoom] ? schedulesMap[selectedRoom]['commands'] : [];\n  const graphSelectedSchedule = getHourlySchedule(selectedSchedule);\n  const headerText = selectedRoom ? \"\".concat(selectedRoom, \" Schedule\") : 'No Schedules Available';\n  const graphProps = {\n    selectedSchedulePoint,\n    setSelectedSchedulePoint,\n    graphSelectedSchedule\n  };\n  const formProps = {\n    selectedSchedulePoint,\n    setSchedulesMap,\n    selectedRoom,\n    schedulesMap\n  };\n  return React.createElement(Box, {\n    className: classes.Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, headerText), React.createElement(Box, {\n    className: classes.ContentSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Object.keys(schedulesMap).length > 0 && React.createElement(Box, {\n    className: classes.GraphFormSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Graph, Object.assign({}, graphProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Form, Object.assign({}, formProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/gzoldi/Downloads/Plenty QA Takehome/client/src/App/Main/Main.jsx"],"names":["React","useState","useEffect","Box","Graph","Form","makeStyles","getHourlySchedule","useStyles","Main","display","flexDirection","padding","width","ContentSection","flex","GraphFormSection","marginTop","maxHeight","schedulesMap","selectedRoom","setSchedulesMap","classes","selectedSchedulePoint","setSelectedSchedulePoint","time","mapPoint","commands","find","x","selectedSchedule","graphSelectedSchedule","headerText","graphProps","formProps","Object","keys","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,OAAO,EAAE,MAHL;AAIJC,IAAAA,KAAK,EAAE;AAJH,GADqB;AAO3BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAE,MADQ;AAEdF,IAAAA,KAAK,EAAE,MAFO;AAGdH,IAAAA,OAAO,EAAE;AAHK,GAPW;AAY3BM,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,MADK;AAEhBP,IAAAA,OAAO,EAAE,MAFO;AAGhBC,IAAAA,aAAa,EAAE,QAHC;AAIhBE,IAAAA,KAAK,EAAE,MAJS;AAKhBK,IAAAA,SAAS,EAAE,KALK;AAMhBN,IAAAA,OAAO,EAAE;AANO;AAZS,CAAD,CAA5B;;AAsBA,MAAMH,IAAI,GAAG,CAAC;AAAEU,EAAAA,YAAF;AAAgBC,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAqD;AAChE,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AADgE,oBAGNP,QAAQ,CAAC,IAAD,CAHF;AAAA;AAAA,QAGzDsB,qBAHyD;AAAA,QAGlCC,wBAHkC;;AAKhEtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,qBAAJ,EAA2B;AAAA,YACjBE,IADiB,GACRF,qBADQ,CACjBE,IADiB;AAEzB,YAAMC,QAAQ,GAAGP,YAAY,CAACC,YAAD,CAAZ,CAA2BO,QAA3B,CAAoCC,IAApC,CAAyCC,CAAC,IAAIA,CAAC,CAACJ,IAAF,KAAWA,IAAzD,CAAjB;;AACA,UAAIC,QAAJ,EAAc;AACZF,QAAAA,wBAAwB,CAACE,QAAD,CAAxB;AACD,OAFD,MAEO;AACLF,QAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;AACF,KATa,CAUd;;AACD,GAXQ,EAWN,CAACL,YAAD,EAAeC,YAAf,CAXM,CAAT;AAaA,QAAMU,gBAAgB,GAAGX,YAAY,CAACC,YAAD,CAAZ,GAA6BD,YAAY,CAACC,YAAD,CAAZ,CAA2B,UAA3B,CAA7B,GAAsE,EAA/F;AACA,QAAMW,qBAAqB,GAAGxB,iBAAiB,CAACuB,gBAAD,CAA/C;AAEA,QAAME,UAAU,GAAGZ,YAAY,aAAMA,YAAN,iBAAgC,wBAA/D;AACA,QAAMa,UAAU,GAAG;AAAEV,IAAAA,qBAAF;AAAyBC,IAAAA,wBAAzB;AAAmDO,IAAAA;AAAnD,GAAnB;AACA,QAAMG,SAAS,GAAG;AAAEX,IAAAA,qBAAF;AAAyBF,IAAAA,eAAzB;AAA0CD,IAAAA,YAA1C;AAAwDD,IAAAA;AAAxD,GAAlB;AAEA,SACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACb,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKuB,UAAL,CADF,EAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACR,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqB,MAAM,CAACC,IAAP,CAAYjB,YAAZ,EAA0BkB,MAA1B,GAAmC,CAAnC,IACC,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACN,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,oBAAWiB,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,oBAAC,IAAD,oBAAUC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CAFJ,CAFF,CADF;AAaD,CAtCD;;AAwCA,eAAezB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Graph from './Graph/Graph';\nimport Form from './Form/Form';\nimport { makeStyles } from '@material-ui/styles';\nimport { getHourlySchedule } from './../utils';\n\nconst useStyles = makeStyles({\n  Main: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '2rem',\n    width: '100%'\n  },\n  ContentSection: {\n    flex: 'auto',\n    width: '100%',\n    display: 'flex'\n  },\n  GraphFormSection: {\n    marginTop: '4rem',\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    maxHeight: '80%',\n    padding: '0 2rem'\n  }\n});\n\nconst Main = ({ schedulesMap, selectedRoom, setSchedulesMap }) => {\n  const classes = useStyles();\n\n  const [selectedSchedulePoint, setSelectedSchedulePoint] = useState(null);\n\n  useEffect(() => {\n    if (selectedSchedulePoint) {\n      const { time } = selectedSchedulePoint;\n      const mapPoint = schedulesMap[selectedRoom].commands.find(x => x.time === time);\n      if (mapPoint) {\n        setSelectedSchedulePoint(mapPoint);\n      } else {\n        setSelectedSchedulePoint(null);\n      }\n    }\n    // eslint-disable-next-line\n  }, [schedulesMap, selectedRoom]);\n\n  const selectedSchedule = schedulesMap[selectedRoom] ? schedulesMap[selectedRoom]['commands'] : [];\n  const graphSelectedSchedule = getHourlySchedule(selectedSchedule);\n\n  const headerText = selectedRoom ? `${selectedRoom} Schedule` : 'No Schedules Available';\n  const graphProps = { selectedSchedulePoint, setSelectedSchedulePoint, graphSelectedSchedule };\n  const formProps = { selectedSchedulePoint, setSchedulesMap, selectedRoom, schedulesMap };\n\n  return (\n    <Box className={classes.Main}>\n      <h1>{headerText}</h1>\n      <Box className={classes.ContentSection}>\n        {Object.keys(schedulesMap).length > 0 && (\n          <Box className={classes.GraphFormSection}>\n            <Graph {...graphProps} />\n            <Form {...formProps} />\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}